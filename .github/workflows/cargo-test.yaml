# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md

on: 
  pull_request:
    paths:
      - 'actix-api/**'
      - 'types/**'
      - 'yew-ui/**'
      - 'docker/**'
      - 'videocall-client/**'

name: check backend
  
jobs:
  # Split the workflow into parallel build and test jobs
  build:
    name: Build crates
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Setup Rust toolchain with caching
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Use rust-cache for better caching
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "build-cache"

      # Build all crates without running tests
      - name: Build all crates
        run: cargo build --workspace

  # Run tests in parallel per package
  test:
    name: Test crates
    needs: build  # Run after build to use cached artifacts
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: [actix-api, videocall-client]
        # Add additional packages as needed
    steps:
      - uses: actions/checkout@v3

      # Setup Rust toolchain
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Use rust-cache with per-package key
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "test-${{ matrix.package }}"

      # Run tests for the specific package
      - name: Run tests for ${{ matrix.package }}
        run: |
          if [ "${{ matrix.package }}" == "actix-api" ]; then
            docker compose -f docker/docker-compose.yaml run websocket-api bash -c "cd /app/actix-api && cargo test -- --test-threads=4"
          else
            cargo test -p ${{ matrix.package }} --lib -- --test-threads=4
            cargo test -p ${{ matrix.package }} --test test_harness -- --test-threads=4
          fi

  # Run clippy in parallel
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        package: [actix-api, yew-ui, videocall-client]
    steps:
      - uses: actions/checkout@v3

      # Setup Rust toolchain
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      # Use rust-cache
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "lint-${{ matrix.package }}"

      # Run clippy for specific package
      - name: Run clippy for ${{ matrix.package }}
        run: |
          if [ "${{ matrix.package }}" == "actix-api" ]; then
            docker compose -f docker/docker-compose.yaml run websocket-api bash -c "cd /app/actix-api && cargo clippy --all -- --deny warnings"
          elif [ "${{ matrix.package }}" == "yew-ui" ]; then
            docker compose -f docker/docker-compose.yaml run yew-ui bash -c "cd /app/yew-ui && cargo clippy --all -- --deny warnings"
          else
            cargo clippy -p ${{ matrix.package }} --all -- --deny warnings
          fi
