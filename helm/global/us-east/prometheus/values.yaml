# Prometheus values for videocall monitoring (minimal resources)
prometheus:
  # Prometheus server configuration
  server:
    # Minimal resources (reduced for limited cluster)
    resources:
      limits:
        cpu: 50m
        memory: 256Mi
      requests:
        cpu: 25m
        memory: 128Mi
    
    # Single replica
    replicaCount: 1
    
    # Persistence (minimal)
    persistentVolume:
      enabled: true
      size: 8Gi
      storageClass: "do-block-storage"
    
    # Retention
    retention: "7d"
    
    # Service configuration
    service:
      type: ClusterIP
      servicePort: 80
    
    # Security context
    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      fsGroup: 65534
    
    # Global scrape configuration
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
  # Alertmanager (disabled for minimal setup)
  alertmanager:
    enabled: false
  
  # Node exporter (disabled for minimal setup)
  nodeExporter:
    enabled: false
  
  # Pushgateway (disabled for minimal setup)
  pushgateway:
    enabled: false
  
  # Kube-state-metrics (minimal)
  kubeStateMetrics:
    enabled: true
    resources:
      limits:
        cpu: 25m
        memory: 32Mi
      requests:
        cpu: 10m
        memory: 16Mi
  
    # Server configuration files
  serverFiles:
    prometheus.yml:
      rule_files:
        - "alert_rules.yml"
      
      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']

        # Client health metrics (sessions, NetEQ, video quality, etc.)
        - job_name: 'videocall-client-metrics'
          static_configs:
            - targets: ['metrics-api:9091']
          metrics_path: '/metrics'
          scrape_interval: 5s
          scrape_timeout: 4s

        # Server connection tracking (with session_id, stale cleanup, etc.)
        - job_name: 'videocall-server-stats'
          static_configs:
            - targets: ['metrics-api-server-stats:9092']
          metrics_path: '/metrics'
          scrape_interval: 5s
          scrape_timeout: 4s
        
        # Kubernetes API server
        - job_name: 'kubernetes-apiservers'
          kubernetes_sd_configs:
            - role: endpoints
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: default;kubernetes;https
        
        # Kubernetes nodes
        - job_name: 'kubernetes-nodes'
          kubernetes_sd_configs:
            - role: node
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/${1}/proxy/metrics
        
        # Kubernetes service endpoints
        - job_name: 'kubernetes-service-endpoints'
          honor_labels: true
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              action: keep
              regex: "true"
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
              action: drop
              regex: "true"
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              regex: (https?)
              target_label: __scheme__
              replacement: $1
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              regex: (.+)
              target_label: __metrics_path__
              replacement: $1
            - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              regex: (.+?)(?::\d+)?;(\d+)
              target_label: __address__
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
              replacement: __param_$1
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: service
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: node
        
        # Kubernetes pods
        - job_name: 'kubernetes-pods'
          honor_labels: true
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: "true"
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]
              action: drop
              regex: "true"
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
              action: replace
              regex: (https?)
              target_label: __scheme__
              replacement: $1
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              regex: (.+)
              target_label: __metrics_path__
              replacement: $1
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]
              action: replace
              regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
              target_label: __address__
              replacement: '[$2]:$1'
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]
              action: replace
              regex: (\d+);((([0-9]+?)(\.|$)){4})
              target_label: __address__
              replacement: $2:$1
            - action: labelmap
              regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
              replacement: __param_$1
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_phase]
              action: drop
              regex: Pending|Succeeded|Failed|Completed
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: node
    
    alert_rules.yml:
      groups:
        - name: videocall_alerts
          rules:
            - alert: HighAudioReceptionFailures
              expr: rate(videocall_audio_reception_failures_total[5m]) > 0.1
              for: 2m
              labels:
                severity: warning
              annotations:
                summary: "High audio reception failures detected"
                description: "Audio reception failure rate is {{ $value }} failures/sec"
            
            - alert: HighVideoReceptionFailures
              expr: rate(videocall_video_reception_failures_total[5m]) > 0.1
              for: 2m
              labels:
                severity: warning
              annotations:
                summary: "High video reception failures detected"
                description: "Video reception failure rate is {{ $value }} failures/sec"
            
            - alert: LowAudioConnectivity
              expr: videocall_peer_can_listen < 0.5
              for: 1m
              labels:
                severity: critical
              annotations:
                summary: "Low audio connectivity detected"
                description: "Audio connectivity is {{ $value }}%"
            
            - alert: LowVideoConnectivity
              expr: videocall_peer_can_see < 0.5
              for: 1m
              labels:
                severity: critical
              annotations:
                summary: "Low video connectivity detected"
                description: "Video connectivity is {{ $value }}%"
            
            - alert: HighNetEQBuffer
              expr: videocall_neteq_audio_buffer_ms > 200
              for: 2m
              labels:
                severity: warning
              annotations:
                summary: "High NetEQ audio buffer detected"
                description: "NetEQ audio buffer is {{ $value }}ms"
            
            - alert: HighPacketDecodeQueue
              expr: videocall_neteq_packets_awaiting_decode > 20
              for: 2m
              labels:
                severity: warning
              annotations:
                summary: "High packet decode queue detected"
                description: "{{ $value }} packets awaiting decode"
            
            - alert: HighDecodeOperations
              expr: rate(videocall_neteq_normal_ops_per_sec[5m]) + rate(videocall_neteq_expand_ops_per_sec[5m]) + rate(videocall_neteq_accelerate_ops_per_sec[5m]) > 50
              for: 2m
              labels:
                severity: warning
              annotations:
                summary: "High decode operations detected"
                description: "{{ $value }} decode operations per second"